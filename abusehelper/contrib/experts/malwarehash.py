"""
Looks up malware hashes from virustotal.com and the Shadowserver hash
registry.

Maintainer: "Juhani Eronen" <exec@iki.fi>

Original code by Toni Huttunen, 20110801
"""
import os
import socket
import idiokit
import urllib
import urllib2
import httplib
import email
import simplejson as json

from idiokit import timer, threadpool
from abusehelper.core import bot, events, taskfarm
from abusehelper.contrib.experts.combiner import Expert
import abusehelper.core.utils as utils

from tempfile import mkstemp
from subprocess import Popen, PIPE, STDOUT
from random import choice
from StringIO import StringIO
from time import strptime
from calendar import timegm

class MalwareHashExpert(Expert):
    virustotal_key = bot.Param(default="")

    def augment_keys(self, *args, **keys):
        yield (keys.get("resolve", ("md5",)))

    @idiokit.stream
    def augment(self, key):
        while True:
            eid, event = yield idiokit.next()

            for md5sum in event.values(key):
                new = events.Event()

                try:
                    if self.virustotal_key:
                        req = urllib2.build_opener()
                        url = "https://www.virustotal.com/api/get_file_report.json"
                        parameters = {"resource": md5sum, "key": self.virustotal_key}
                        url = urllib2.Request(url, urllib.urlencode(parameters))
                        info, fileobj = yield utils.fetch_url(url)
                        data = fileobj.read()
                        
                        report = json.loads(data).get("report")

                        if report:
                            for key, val in report[1].iteritems():
                                if val:
                                    new.add("av result", "%s %s (virustotal.com)" %
                                              (key, val))
                            new.add("scan date", report[0])
                except utils.FetchUrlFailed, fuf:
                    pass

                try:
                    url = "http://innocuous.shadowserver.org/api/?query=" + md5sum
                    info, fileobj = yield utils.fetch_url(url)
                    data = fileobj.read()

                    details, vendordata = data.split("\n")[:2]
                    vendors = json.loads(vendordata)

                    names  = ["md5", "sha1", "first seen", "last seen", 
                              "file type", "ssdeep hash"]
                    values = details.replace('"',"").split(",")[:6]

                    for vendor, name in vendors.iteritems():
                        new.add("av result", "%s %s (shadowsserver.org)" % 
                                  (vendor, name))

                    for key, value in zip(names, values):
                        if value:
                            new.add(key, value)
                except utils.FetchUrlFailed, fuf:
                    new.add("malwarehash", "Failed to get malware hash data")

                yield idiokit.send(eid, new)

if __name__ == "__main__":
    MalwareHashExpert.from_command_line().execute()
