"""
Sanitizer for mdlcsvbot.

Maintainer: Lari Huttunen <spam@huttu.net>
"""

import re

from abusehelper.core import events, config

sanitizer = config.load_module("sanitizer")

class MalwareDomainListBotSanitizer(sanitizer.Sanitizer):

    def fix_ip_url(self, ipurl):
        parts = []
        parts = ipurl.split('/')
        return parts[0]

    def sanitize(self, event):
        new = events.Event()
        if not event.contains('asn'):
            self.log.info("No valid asn for event %r", event)
        new.update("asn", event.values("asn"))
        if not event.contains('feed'):
            self.log.info("No valid feed for event %r", event)
            return []
        new.update('feed', event.values("feed"))

        if not event.contains('ip'):
            self.log.info("No ip for event %r", event)
            return []
        ipurl = ""
        for ipurl in event.values('ip'):
            info = []
            if re.search('(\/|:)', ipurl):
                ipurl = self.fix_ip_url(ipurl)
                new.add('ip', ipurl)
                url = 'http://%s' % (ipurl)
                new.add('url', url)
                info.append('URL: %s' % (url))
            else:
                try:
                    new.add("ip", sanitizer.ip(ipurl))
                except TypeError:
                    self.log.info("No ip for event %r", event)
                if event.contains('url'):
                    url = 'http://%s' % (event.value('url'))
                    info.append('URL: %s' % (url))
                    new.add('url', url)
                else:
                    self.log.info("No url data for event %r", event)
            if not event.contains('description'):
                info.append('Description: malware')
            else:
                info.append('Description: %s' % (event.value('description')))
            info = ', '.join(info)
            new.add('info', info)
            if not new.contains('ip'):
                self.log.info("No valid ip for event %r", event)
                return []

        new.add('time', sanitizer.format_time())
        new.add('type', 'malware')

        return [new]

if __name__ == "__main__":
    MalwareDomainListBotSanitizer.from_command_line().execute()
